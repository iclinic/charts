replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

image:
  repository: outlinewiki/outline
  pullPolicy: IfNotPresent
  tag: ""

outline:
  auth:
    google:
      allowedDomains:
        - example.com
        - example.net
  aws:
    s3:
      acl: private
      bucket: ""
      endpoint: ""
      maxSize: 26214400
      region: ""
  containerPort: 3000
  debug: "sql,cache,presenters,events,logistics,emails,mailer"
  externalUrl: "https://chart.example"
  forceHttps: false
  teamLogo: ""

serviceAccount:
  create: true
  name:
#  annotations:
#    

redis:
  usePassword: false

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

## Expose the outline service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  type: ClusterIP
  port: 3000
  targetPort: 3000
  annotations: {}
  labels: {}
  portName: http

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # Values can be templated
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /

  # pathType is only for k8s > 1.19
  pathType: Prefix

  hosts:
    - chart-example.local
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  ## Or for k8s > 1.19
  # - path: /*
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: ssl-redirect
  #       port:
  #         name: service

resources: {}
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

## Create HorizontalPodAutoscaler object.
##
autoscaling:
  enabled: false
#   minReplicas: 1
#   maxReplicas: 4
#   targetCPUUtilizationPercentage: 80
#   targetMemoryUtilizationPercentage: 80

# Environment variables to be passed to Outline's container
env: []
# - name: SOME_VAR
#   value: some-var-value
# - name: SOME_VAR_FROM_CONFIG_MAP
#   valueFrom:
#     configMapRef:
#       name: configmap-name
#       key: config-key
# - name: SOME_SECRET
#   valueFrom:
#     secretKeyRef:
#       name: secret-name
#       key: secret-key

envFrom: []
# - configMapRef:
#     name: config-map-name
# - secretRef:
#     name: secret-map-name


nodeSelector: {}

tolerations: []

affinity: {}
